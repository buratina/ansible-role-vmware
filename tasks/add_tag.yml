---

- name: ensure category exists
  vmware_category:
    hostname: "{{ lookup('env', 'VMWARE_HOST')|default(providers.vcenter.hostname) }}"
    username: "{{ lookup('env', 'VMWARE_USER')|default(providers.vcenter.username) }}"
    password: "{{ lookup('env', 'VMWARE_PASSWORD')|default(providers.vcenter.password) }}"
    category_name: "{{ vcenter_category_name }}"
    category_description: "{{ vcenter_category_name }}"
    category_cardinality: 'multiple'
    state: present
  register: vcenter_category_info

- debug:
    msg: "{{ vcenter_category_info.category_results.category_id }}"

- name: create tags
  vmware_tag:
    hostname: "{{ lookup('env', 'VMWARE_HOST')|default(providers.vcenter.hostname) }}"
    username: "{{ lookup('env', 'VMWARE_USER')|default(providers.vcenter.username) }}"
    password: "{{ lookup('env', 'VMWARE_PASSWORD')|default(providers.vcenter.password) }}"
    category_id: "{{ vcenter_category_info.category_results.category_id }}"
    tag_name: "{{ item.1 }}_{{ item.0.item.item[item.1] | default('') }}"
    tag_description: "{{ item.1 }} {{ item.0.item.item[item.1] | default('') }}"
    state: present
  with_nested:
    - "{{ instances.results }}"
    - [ 'app_name', 'role' ]
  when:
    - vcenter_category_info.category_results.category_id is defined
    - item.0.instance is defined
  ignore_errors: yes

- name: add tags
  vmware_tag_manager:
    hostname: "{{ lookup('env', 'VMWARE_HOST')|default(providers.vcenter.hostname) }}"
    username: "{{ lookup('env', 'VMWARE_USER')|default(providers.vcenter.username) }}"
    password: "{{ lookup('env', 'VMWARE_PASSWORD')|default(providers.vcenter.password) }}"
    object_name: "{{ item.instance.hw_name }}"
    object_type: VirtualMachine
    state: present
    tag_names:
      - "app_name_{{ item.item.item.app_name | default('') }}"
      - "role_{{ item.item.item.role | default('') }}"
  loop: "{{ instances.results }}"
  when:
    - vcenter_category_info.category_results.category_id is defined
    - item.instance is defined
  ignore_errors: yes